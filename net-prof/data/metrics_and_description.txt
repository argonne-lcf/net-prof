There are 12 unique Cassini counter groups:

Name                    Counter Group
CxiPerfStats            Traffic Congestion Counter Group
CxiErrStats             Network Error Counter Group
CxiOpCommands           Operation (Command) Counter Group
CxiOpPackets            Operation (Packet) Counter Group
CxiDmaEngine            DMA Engine Counter Group
CxiWritesToHost         Writes-to-Host Counter Group
CxiMessageMatchingPooled    Message Matching of Pooled Counters Group
CxiTranslationUnit      Translation Unit Counter Group
CxiLatencyHist          Latency Histogram Counter Group
CxiPctReqRespTracking   PCT Request and Response Tracking Counter Group
CxiLinkReliability      Link Reliability Counter Group
CxiCongestion           Congestion Counter Group

CxiPerfStats - traffic congestion counter groupÔÉÅ
Use CxiPerfStats counters as a starting point for investigating application performance details. CxiPerfStats counters provide information on the amount of traffic generated by the NIC, regardless of whether the traffic is slowed down by address translation and back pressure from the host or whether that traffic is causing congestion issues.

Counter Name                                Description

HNI_PKTS_SENT_BY_TC_<n>         Number of packets sent in traffic class <n>; 8 counters, default classes are 0 for request and 1 for response.
HNI_PKTS_RECV_BY_TC_<n>         Number of packets received in traffic class <n>; 8 counters, default classes are 0 for request and 1 for response.
HNI_TX_PAUSED_<n>               Number of cycles in which the transmit path is paused for traffic class <n>; default classes are 0 for request and 1 for response. Indicates that this endpoint is supplying data faster than the network can deliver it. Divide by 1E9 to determine the proportion of time paused.
HNI_RX_PAUSED_<n>               Number of cycles in which the pause is applied on the receive path for traffic class <n>; default classes are 0 for request and 1 for response. Indicates that the network is supplying data faster than this endpoint can consume it. Divide by 1E9 to determine the proportion of time paused.
PARBS_TARB_PI_POSTED_PKTS       Number of PCIe packets transferred using the posted path (for example, writes),
PARBS_TARB_PI_POSTED_BLOCKED_CNT and the number of cycles in which this path is blocked. Compute the ratio cycles/pkts. Values of more than a few cycles per packet indicate back pressure from the host. This endpoint is likely to be the cause of congestion.
PARBS_TARB_PI_NON_POSTED_PKTS   Number of PCIe packets transferred using the non-posted path (for example,
PARBS_TARB_PI_NON_POSTED_BLOCKED_CNT    reads), and the number of cycles in which this path is blocked. Compute the ratio cycles/pkts. Values of more than a few cycles per packet indicate per host performance (high read latencies). This endpoint is likely to be injecting at a low rate.
LPE_NET_MATCH_PRIORITY_<n>      Number of messages matched on the priority list (or receive was posted before the message arrived). Four counters of which 0 is the default. These messages incur lower cost because data is written directly to the user buffer.
LPE_NET_MATCH_OVERFLOW_<n>      Number of messages where payload data was delivered to a buffer on the overflow list because there was no match on the priority list. Four counters of which 0 is the default. These messages incur higher cost because data must be copied from the overflow buffer. Compute the ratio priority/(priority + overflow) to determine the porportion of messages for which receives were posted in advance.
ATU_CACHE_MISS_<n>              Number of misses in the NIC translation cache. Four counters of which counter 0 counts misses on 4K pages and counter 1 counts misses on 2M pages by default.
ATU_CACHE_EVICTIONS_<n>         Number of times a tag was evicted from the NIC translation cache to make room for a new tag.

Need to fill from https://cpe.ext.hpe.com/docs/latest/getting_started/HPE-Cassini-Performance-Counters.html